# Invocation command line:
# /home/iiitd/Desktop/hw11/bin/harness/runcpu --configfile clang --size test --copies 1 --noreportable --iterations 1 --noreportable --nopower --runmode rate --tune base:peak --size test intrate
# output_root was not used for this run
############################################################################
#------------------------------------------------------------------------------
# SPEC CPU2017 config file for: LLVM / Linux / AMD64
#------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
#
# SPEC tested this config file with:
#    Compiler version(s):     LLVM/3.9.0
#    Operating system(s):     Linux
#    Hardware:                AMD64
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label test1                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or,
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 4      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%define  os          LINUX
%if %{bits} == 64
%   define model        -m64
%elif %{bits} == 32
%   define model        -m32
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

#backup_config          = 0                     # Uncomment for cleaner config/ directory
flagsurl000             = /home/iiitd/Desktop/hw11/config/flags/gcc.xml
flagsurl001             = /home/iiitd/Desktop/hw11/config/flags/clang.xml
ignore_errors           = 1
iterations              = 1
label                   = %{label}-m%{bits}
line_width              = 1020
log_line_width          = 1020
makeflags               = --jobs=%{build_ncpus}
mean_anyway             = 1
output_format           = txt,html,cfg,pdf,csv

preenv                  = 1
tune                    = base,peak

#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads.
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?
#    a. Unknown, you will have to try it and see!
#
# To get you started:
#
#     copies - This config file sets 1 copy per core (after you set the
#              'cpucores' variable, just below).
#              Please be sure you have enough memory; if you do not, you might
#              need to run a smaller number of copies.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You can try adjusting it.
#               Higher thread counts are much more likely to be useful for
#               fpspeed than for intspeed.
#
#
# To do so, please adjust these; also adjust the 'numactl' lines, below

                               # EDIT to define system sizes
%define  cpucores       4      #         number of physical cores
%define  cputhreads     8      #         number of logical cores
%define  numanodes      1      #         number of NUMA nodes for affinity

intrate,fprate:
   copies                  = %{cpucores}
intspeed,fpspeed:
   threads                 = %{cputhreads}

#-------- CPU binding for rate -----------------------------------------------
# When you run multiple copies for SPECrate mode, performance
# is improved if you bind the copies to specific processors.  EDIT the numactl stuff below.

intrate,fprate:
submit       = echo "$command" > run.sh ; $BIND bash run.sh

# Affinity settings:                     EDIT this section
# Please adjust these values for your
# particular system as these settings are
# for an 8 core, one NUMA node (-m 0) system.
bind0	= numactl -m 0 --physcpubind=0
bind1	= numactl -m 0 --physcpubind=1
bind2	= numactl -m 0 --physcpubind=2
bind3	= numactl -m 0 --physcpubind=3
bind4	= numactl -m 0 --physcpubind=4
bind5	= numactl -m 0 --physcpubind=5
bind6	= numactl -m 0 --physcpubind=6
bind7	= numactl -m 0 --physcpubind=7

# EDIT to add additional cores and NUMA nodes as necessary
# bind8	        = numactl -m 1 --physcpubind=8
# bind9	        = numactl -m 1 --physcpubind=9
# bind10	= numactl -m 1 --physcpubind=10
# bind11	= numactl -m 1 --physcpubind=11
# bind12	= numactl -m 1 --physcpubind=12
# bind13	= numactl -m 1 --physcpubind=13
# bind14	= numactl -m 1 --physcpubind=14
# bind15	= numactl -m 1 --physcpubind=15
#
# bind16	= numactl -m 2 --physcpubind=16
# bind17	= numactl -m 2 --physcpubind=17
# bind18	= numactl -m 2 --physcpubind=18
# bind19	= numactl -m 2 --physcpubind=19
# bind20	= numactl -m 2 --physcpubind=20
# bind21	= numactl -m 2 --physcpubind=21
# bind22	= numactl -m 2 --physcpubind=22
# bind23	= numactl -m 2 --physcpubind=23
#
# bind24	= numactl -m 3 --physcpubind=24
# bind25	= numactl -m 3 --physcpubind=25
# bind26	= numactl -m 3 --physcpubind=26
# bind27	= numactl -m 3 --physcpubind=27
# bind28	= numactl -m 3 --physcpubind=28
# bind29	= numactl -m 3 --physcpubind=29
# bind30	= numactl -m 3 --physcpubind=30
# bind31	= numactl -m 3 --physcpubind=31
#
# bind32	= numactl -m 4 --physcpubind=32
# bind33	= numactl -m 4 --physcpubind=33
# bind34	= numactl -m 4 --physcpubind=34
# bind35	= numactl -m 4 --physcpubind=35
# bind36	= numactl -m 4 --physcpubind=36
# bind37	= numactl -m 4 --physcpubind=37
# bind38	= numactl -m 4 --physcpubind=38
# bind39	= numactl -m 4 --physcpubind=39
#
# bind40	= numactl -m 5 --physcpubind=40
# bind41	= numactl -m 5 --physcpubind=41
# bind42	= numactl -m 5 --physcpubind=42
# bind43	= numactl -m 5 --physcpubind=43
# bind44	= numactl -m 5 --physcpubind=44
# bind45	= numactl -m 5 --physcpubind=45
# bind46	= numactl -m 5 --physcpubind=46
# bind47	= numactl -m 5 --physcpubind=47
#
# bind48	= numactl -m 6 --physcpubind=48
# bind49	= numactl -m 6 --physcpubind=49
# bind50	= numactl -m 6 --physcpubind=50
# bind51	= numactl -m 6 --physcpubind=51
# bind52	= numactl -m 6 --physcpubind=52
# bind53	= numactl -m 6 --physcpubind=53
# bind54	= numactl -m 6 --physcpubind=54
# bind55	= numactl -m 6 --physcpubind=55
#
# bind56	= numactl -m 7 --physcpubind=56
# bind57	= numactl -m 7 --physcpubind=57
# bind58	= numactl -m 7 --physcpubind=58
# bind59	= numactl -m 7 --physcpubind=59
# bind60	= numactl -m 7 --physcpubind=60
# bind61	= numactl -m 7 --physcpubind=61
# bind62	= numactl -m 7 --physcpubind=62
# bind63	= numactl -m 7 --physcpubind=63


#------- Compilers ------------------------------------------------------------
default:
#                                      EDIT paths to LLVM and libraries:
    BASE_DIR           = /usr/lib
    # LLVM_PATH specifies the directory path containing required LLVM files and
    # potentially multiple LLVM versions.
    LLVM_PATH          = $[BASE_DIR]/llvm-6.0
    # LLVM_ROOT_PATH specifies the directory path to the LLVM version to be
    # used. EDIT: Change llvm-v390 to appropriate directory name.
    LLVM_ROOT_PATH     = $[LLVM_PATH]
    LLVM_BIN_PATH      = $[LLVM_ROOT_PATH]/bin
    LLVM_LIB_PATH      = $[LLVM_ROOT_PATH]/lib
    LLVM_INCLUDE_PATH  = $[LLVM_ROOT_PATH]/include
    DRAGONEGG_PATH     = $[LLVM_PATH]/dragonegg
    DRAGONEGG_SPECS    = $[DRAGONEGG_PATH]/integrated-as.specs
    # DragonEgg version 3.5.2 requires GCC version 4.8.2.
    # EDIT LLVM_GCC_DIR to reflect the GCC path.
    LLVM_GCC_DIR       = $[LLVM_PATH]/gcc-4.8.2
    GFORTRAN_DIR       = $[LLVM_GCC_DIR]/bin
    # Specify Intel OpenMP library path.
    OPENMP_DIR         = $[BASE_DIR]/lib/libomp_oss/exports

    preENV_PATH             = $[LLVM_BIN_PATH]:%{ENV_PATH}

    CC                  = $(LLVM_BIN_PATH)/clang %{model}
    CXX                 = $(LLVM_BIN_PATH)/clang++ %{model}
    FORTRAN_COMP        = $(GFORTRAN_DIR)/gfortran
    FC                  = $(FORTRAN_COMP) %{model}
    CLD                 = $(LLVM_BIN_PATH)/clang %{model}
    FLD                 = $(LLVM_BIN_PATH)/clang %{model}
    # How to say "Show me your version, please"
    CC_VERSION_OPTION   = -v
    CXX_VERSION_OPTION  = -v
    FC_VERSION_OPTION   = -v

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = 64-bit
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = 32-bit
%endif

intrate,intspeed:                     # 502.gcc_r and 602.gcc_s may need the
%if %{bits} == 32                     # flags from this section.  For 'base',
    EXTRA_COPTIMIZE = -fgnu89-inline  # all benchmarks must use the same
%else                                 # options, so we add them to all of
    LDCFLAGS        = -z muldefs      # integer rate and integer speed.  See:
%endif                                # www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html

#--------- Portability --------------------------------------------------------
default:# data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file
    # systems may fail spectacularly and frequently (or, worse, quietly and
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
%if %{bits} == 32
%   define suffix IA32
%else
%   define suffix X64
%endif
   PORTABILITY    = -DSPEC_%{os}_%{suffix}

521.wrf_r,621.wrf_s:  #lang='F,C'
   CPORTABILITY  = -DSPEC_CASE_FLAG
   FPORTABILITY  = -fconvert=big-endian

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_%{os}

526.blender_r:  #lang='CXX,C'
    CPORTABILITY = -funsigned-char
    CXXPORTABILITY = -D__BOOL_DEFINED

527.cam4_r,627.cam4_s:  #lang='F,C'
   PORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:  #lang='F,C'
    CPORTABILITY = -DSPEC_CASE_FLAG
    FPORTABILITY = -fconvert=big-endian

#--------  Baseline Tuning Flags ----------------------------------------------
default=base:
    COPTIMIZE     = -O3 -mavx -Wall -pg
    CXXOPTIMIZE   = -O3 -mavx
    FOPTIMIZE     = -O3 -mavx -funroll-loops
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so
    EXTRA_FLIBS   = -lgfortran -lm
    LDOPTIMIZE    = -z muldefs
intrate,fprate:
    preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]
    preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]
   #preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]:%{ENV_LIBRARY_PATH}
   #preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed:
       OPENMP_LIB_PATH          = $[OPENMP_DIR]/lin_32e/lib
       EXTRA_OPTIMIZE           = -DSPEC_OPENMP -fopenmp -Wno-return-type -DUSE_OPENMP -I $(OPENMP_DIR)/common/include
       EXTRA_LIBS               = -fopenmp=libomp -L$(OPENMP_LIB_PATH) -lomp
       EXTRA_FLIBS              = -fopenmp=libomp -lgfortran -lm
       preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
       preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
      #preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LIBRARY_PATH}
      #preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}
       preENV_OMP_THREAD_LIMIT  = %{cputhreads}
       preENV_OMP_STACKSIZE     = 128M
       preENV_GOMP_CPU_AFFINITY = 0-%{cputhreads}
%endif

#--------  Peak Tuning Flags ----------------------------------------------
default=peak:
    COPTIMIZE     = -Ofast -mavx
    CXXOPTIMIZE   = -O3 -mavx
    EXTRA_FLIBS   = -lgfortran -lm
    FOPTIMIZE     = -Ofast -mavx -funroll-loops -fno-stack-arrays
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

502.gcc_r,602.gcc_s=peak:  #lang='C'
    LDOPTIMIZE    = -z muldefs

521.wrf_r,621.wrf_s=peak:  #lang='F,C'
    COPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx
    EXTRA_FLIBS   = -lgfortran -lm
    FOPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx -funroll-loops
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

523.xalancbmk_r,623.xalancbmk_s=peak:  #lang='CXX
    CXXOPTIMIZE   = -O3 -mavx

#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler000   = C/C++: Version 3.9.0 of Clang, the
   sw_compiler001   = LLVM Compiler Infrastructure
   sw_compiler002   = Fortran: Version 4.8.2 of GCC, the
   sw_compiler003   = GNU Compiler Collection
   sw_compiler004   = DragonEgg: Version 3.5.2, the
   sw_compiler005   = LLVM Compiler Infrastructure
#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
 # hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
 # hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
   hw_model           = # TurboBlaster 3000                   # system model name
 # hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information
 # sw_file            = # ext99                               # File system
 # sw_os001           = # Linux Sailboat                      # Operating system
 # sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
 # sw_state           = # Run level 99                        # Software state.

# Note: Some commented-out fields above are automatically set to preliminary
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo


# The following settings were obtained by running the sysinfo_program
# 'specperl $[top]/bin/sysinfo' (sysinfo:SHA:32259ebd59f3e93740723202f27c44c82ee68e0f2e40cd2ca50cfd5519772397)
default:
notes_plat_sysinfo_000 = Sysinfo program /home/iiitd/Desktop/hw11/bin/sysinfo
notes_plat_sysinfo_005 = Rev: r5974 of 2018-05-19 9bcde8f2999c33d61f64985e45859ea9
notes_plat_sysinfo_010 = running on iiit-d Sat Apr  6 20:07:47 2019
notes_plat_sysinfo_015 =
notes_plat_sysinfo_020 = SUT (System Under Test) info as seen by some common utilities.
notes_plat_sysinfo_025 = For more information on this section, see
notes_plat_sysinfo_030 =    https://www.spec.org/cpu2017/Docs/config.html#sysinfo
notes_plat_sysinfo_035 =
notes_plat_sysinfo_040 = From /proc/cpuinfo
notes_plat_sysinfo_045 =    model name : Intel(R) Core(TM) i5-7500 CPU @ 3.40GHz
notes_plat_sysinfo_050 =       1  "physical id"s (chips)
notes_plat_sysinfo_055 =       4 "processors"
notes_plat_sysinfo_060 =    cores, siblings (Caution: counting these is hw and system dependent. The following
notes_plat_sysinfo_065 =    excerpts from /proc/cpuinfo might not be reliable.  Use with caution.)
notes_plat_sysinfo_070 =       cpu cores : 4
notes_plat_sysinfo_075 =       siblings  : 4
notes_plat_sysinfo_080 =       physical 0: cores 0 1 2 3
notes_plat_sysinfo_085 =
notes_plat_sysinfo_090 = From lscpu:
notes_plat_sysinfo_095 =      Architecture:        x86_64
notes_plat_sysinfo_100 =      CPU op-mode(s):      32-bit, 64-bit
notes_plat_sysinfo_105 =      Byte Order:          Little Endian
notes_plat_sysinfo_110 =      CPU(s):              4
notes_plat_sysinfo_115 =      On-line CPU(s) list: 0-3
notes_plat_sysinfo_120 =      Thread(s) per core:  1
notes_plat_sysinfo_125 =      Core(s) per socket:  4
notes_plat_sysinfo_130 =      Socket(s):           1
notes_plat_sysinfo_135 =      NUMA node(s):        1
notes_plat_sysinfo_140 =      Vendor ID:           GenuineIntel
notes_plat_sysinfo_145 =      CPU family:          6
notes_plat_sysinfo_150 =      Model:               158
notes_plat_sysinfo_155 =      Model name:          Intel(R) Core(TM) i5-7500 CPU @ 3.40GHz
notes_plat_sysinfo_160 =      Stepping:            9
notes_plat_sysinfo_165 =      CPU MHz:             3605.747
notes_plat_sysinfo_170 =      CPU max MHz:         3800.0000
notes_plat_sysinfo_175 =      CPU min MHz:         800.0000
notes_plat_sysinfo_180 =      BogoMIPS:            6816.00
notes_plat_sysinfo_185 =      Virtualization:      VT-x
notes_plat_sysinfo_190 =      L1d cache:           32K
notes_plat_sysinfo_195 =      L1i cache:           32K
notes_plat_sysinfo_200 =      L2 cache:            256K
notes_plat_sysinfo_205 =      L3 cache:            6144K
notes_plat_sysinfo_210 =      NUMA node0 CPU(s):   0-3
notes_plat_sysinfo_215 =      Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov
notes_plat_sysinfo_220 =      pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp
notes_plat_sysinfo_225 =      lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid
notes_plat_sysinfo_230 =      aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3
notes_plat_sysinfo_235 =      sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer
notes_plat_sysinfo_240 =      aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single
notes_plat_sysinfo_245 =      pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust
notes_plat_sysinfo_250 =      bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt intel_pt
notes_plat_sysinfo_255 =      xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window
notes_plat_sysinfo_260 =      hwp_epp flush_l1d
notes_plat_sysinfo_265 =
notes_plat_sysinfo_270 = /proc/cpuinfo cache data
notes_plat_sysinfo_275 =    cache size : 6144 KB
notes_plat_sysinfo_280 =
notes_plat_sysinfo_285 = From numactl --hardware  WARNING: a numactl 'node' might or might not correspond to a
notes_plat_sysinfo_290 = physical chip.
notes_plat_sysinfo_295 =
notes_plat_sysinfo_300 = From /proc/meminfo
notes_plat_sysinfo_305 =    MemTotal:        8049856 kB
notes_plat_sysinfo_310 =    HugePages_Total:     128
notes_plat_sysinfo_315 =    Hugepagesize:       2048 kB
notes_plat_sysinfo_320 =
notes_plat_sysinfo_325 = /usr/bin/lsb_release -d
notes_plat_sysinfo_330 =    Ubuntu 18.04.1 LTS
notes_plat_sysinfo_335 =
notes_plat_sysinfo_340 = From /etc/*release* /etc/*version*
notes_plat_sysinfo_345 =    debian_version: buster/sid
notes_plat_sysinfo_350 =    os-release:
notes_plat_sysinfo_355 =       NAME="Ubuntu"
notes_plat_sysinfo_360 =       VERSION="18.04.1 LTS (Bionic Beaver)"
notes_plat_sysinfo_365 =       ID=ubuntu
notes_plat_sysinfo_370 =       ID_LIKE=debian
notes_plat_sysinfo_375 =       PRETTY_NAME="Ubuntu 18.04.1 LTS"
notes_plat_sysinfo_380 =       VERSION_ID="18.04"
notes_plat_sysinfo_385 =       HOME_URL="https://www.ubuntu.com/"
notes_plat_sysinfo_390 =       SUPPORT_URL="https://help.ubuntu.com/"
notes_plat_sysinfo_395 =
notes_plat_sysinfo_400 = uname -a:
notes_plat_sysinfo_405 =    Linux iiit-d 4.15.0-46-generic #49-Ubuntu SMP Wed Feb 6 09:33:07 UTC 2019 x86_64
notes_plat_sysinfo_410 =    x86_64 x86_64 GNU/Linux
notes_plat_sysinfo_415 =
notes_plat_sysinfo_420 = Kernel self-reported vulnerability status:
notes_plat_sysinfo_425 =
notes_plat_sysinfo_430 = CVE-2017-5754 (Meltdown):          Mitigation: PTI
notes_plat_sysinfo_435 = CVE-2017-5753 (Spectre variant 1): Mitigation: __user pointer sanitization
notes_plat_sysinfo_440 = CVE-2017-5715 (Spectre variant 2): Mitigation: Full generic retpoline, IBPB, IBRS_FW
notes_plat_sysinfo_445 =
notes_plat_sysinfo_450 = run-level 5 2019-04-06 10:17
notes_plat_sysinfo_455 =
notes_plat_sysinfo_460 = SPEC is set to: /home/iiitd/Desktop/hw11
notes_plat_sysinfo_465 =    Filesystem     Type  Size  Used Avail Use% Mounted on
notes_plat_sysinfo_470 =    /dev/sda4      ext4  341G  143G  180G  45% /
notes_plat_sysinfo_475 =
notes_plat_sysinfo_480 = Additional information from dmidecode follows.  WARNING: Use caution when you interpret
notes_plat_sysinfo_485 = this section. The 'dmidecode' program reads system data which is "intended to allow
notes_plat_sysinfo_490 = hardware to be accurately determined", but the intent may not be met, as there are
notes_plat_sysinfo_495 = frequent changes to hardware, firmware, and the "DMTF SMBIOS" standard.
notes_plat_sysinfo_500 =
notes_plat_sysinfo_505 = (End of data from sysinfo program)
hw_cpu_name    = Intel Core i5-7500
hw_disk        = 341 GB  add more disk info here
hw_memory000   = 7.677 GB fixme: If using DDR4, the format is:
hw_memory001   = 'N GB (N x N GB nRxn PC4-nnnnX-X)'
hw_nchips      = 1
prepared_by    = iiitd  (is never output, only tags rawfile)
sw_file        = ext4
sw_os000       = Ubuntu 18.04.1 LTS
sw_os001       = 4.15.0-46-generic
sw_state       = Run level 5 (add definition here)
# End of settings added by sysinfo_program


# The following section was added automatically, and contains settings that
# did not appear in the original configuration file, but were added to the
# raw file after the run.
default:
notes_000 =Environment variables set by runcpu before the start of the run:
notes_005 =LD_LIBRARY_PATH = "/usr/lib/llvm-6.0/lib"
notes_010 =LIBRARY_PATH = "/usr/lib/llvm-6.0/lib"
notes_015 =PATH = "/usr/lib/llvm-6.0/bin:/home/iiitd/Desktop/hw11/bin:/home/iiitd/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin:/home/iiitd/Downloads/pintos/src/utils"
notes_020 =
